<!--<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.2/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.2/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
-->

<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>

<!--A DOCTYPE declaration declaring a DTD is not need for DocBook 5.x, which uses RelaxNG and  Schematron instead. It is used here as a container for entity declarations.-->

<!DOCTYPE chapter 
[
    <!ENTITY % shared-content SYSTEM "shared-content.ent">
    %shared-content;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.1" xml:id="components">
    <title xml:id="components.title">Using &program_name; from behind a NAT device</title>
    <para>&program_name; can be used from behind NAT devices. Both mix and dirauth nodes.</para>
    <para>Some networking scenearios do not require any manual port forwarding, such as operating an ec2 node on AWS,
    the node listens on an internal IP address yet can receive connections that get routed to a public IP address.
    There is a NAT device involved here but it's default policy is to route all trafic to the node.
    Whereas in a home router NAT device, it's default policy is to block inbound connections. For this later
    scenario, the operator must setup port forwarding to the appropriate internal IP address and port number.
    </para>
    <para>The dirauth is a cooperative crash fault tolerant voting system composed of multiple dirauth nodes.
    However, each of these dirauth nodes must have knowledge of the other dirauth node's network connection information
    and public cryptographic key material. It's often convenient enough for dirauth operators to use a private git repo to coordinate
    changes to the dirauth configurations and public key materials. Therefore, dirauth operators wishing to
    operate a node behind a NAT device can configure their node to listen on a RFC1918 address such as 192.168.1.22
    and yet tell the other dirauth node operators that their publicly routable address is some other IP address or perhaps a Tor Onion address.
	</para>
    <para/>
    <para/>
    <para>Currently, besides dirauth nodes, the only other type of node that can use Tor onion services are Gateway nodes, however
    ALL mix node types can operate behind a NAT device by using the BindAddresses option which tells the mix node to listen on the
    "BindAddresses" set of addresses but advertise the other set of addresses denoted by the "Addresses" configuration variable name.
	In other words, when operating nodes behind NAT devices, be sure to explicitly say which network interfaces to listen on via BindAddresses
	and also be explicit which addresses to advertise in the PKI document via Addresses.    
    </para>
    <para>If you are configuring a Gateway node to listen on a Tor onion service, then you must make sure that the BindAddresses match
    the listening address and port in your "torrc" file:</para>
    <programlisting>
 HiddenServiceDir /var/lib/tor/my_website/
 HiddenServicePort 1234 127.0.0.1:1234
    </programlisting>
    <para>We refer you to the Tor onion setup docs for more information: https://community.torproject.org/onion-services/setup/</para>
    <para>The corresponding Gateway config Server section might look like this:</para>
    <programlisting>
[Server]
  Identifier = "gnunet"
  PKISignatureScheme = "Ed25519 Sphincs+"
  WireKEM = "KYBER768-X25519"
  Addresses = [ "onion://your-onion-address.onion:1234"]
  BindAddresses = [ "tcp://127.0.0.1:1234",]
  DataDir = "/var/lib/pq-katzenpost-mixserver"
  IsGatewayNode = true
  IsServiceNode = false
...
    </programlisting>
    
    <para>DIAGRAM: ROUTER, IPs, etc.</para>
    <para>mix node, device NAT device/router; Nat dev has an Internet route. Internall, mix node
        binds to an internal addrexs (show configuration). This is the same for Tor, but with Onion
        addess rahter that a static IP  (see Tor and link)</para>
    <para>NATPMP STUN TURNâ€“ these are Nat PENETRATION PROTOCLDS... NOT SUPPORTED</para>
    <para>Two diagrams...Onion and IPv4/IPv6</para>
    <para>This confguration only allows for the Gateway nodes (which are also mix nodes).</para>
    <para>We need a to show an excerpt from a torrc to show where the onion listening port is
        confuigred.</para>
</chapter>