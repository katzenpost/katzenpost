<?xml version="1.0" encoding="UTF-8"?>
<!ENTITY program_name 'EchoMix'>



<!ENTITY serverconfig '
<!--https://github.com/katzenpost/katzenpost/blob/c255fbbf421d5d9820553c18dc5dc6c9881ad547/server/config/config.go#L84-->
<!--The config code varies by role so it is not included in this entity.-->
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Identifier</emphasis></para>
                        <para>Specifies the human-readable identifier for a node, and must be unique per mixnet. 
                        Identifier can be an FQDN but does not have to be.</para>
                        <para>Type: string</para>
                        <para>Required: Yes</para>
                    </listitem>

                    &WireKEM;

                    <listitem>
                        <para><emphasis role="bold">PKISignatureScheme</emphasis></para>
                        <para>Specifies the cryptographic signature scheme which will be used by all components of the mix network 
                        when interacting with the PKI system. Mix nodes sign their descriptors using this signature scheme, and 
                        dirauth nodes similarly sign PKI documents using this signature scheme.</para>
                        <para>The following signature schemes are supported:
                                "ed25519", "ed448", "Ed25519 Sphincs+", "Ed448-Sphincs+", "Ed25519-Dilithium2", "Ed448-Dilithium3"
                        </para>
                        <para>Type: string</para>
                        <para>Required: Yes</para>
                    </listitem>

                    <listitem>
                        <para><emphasis role="bold">Addresses</emphasis></para>
                        <para>Specifies a list of one or more Address URLs in a format that contains the transport protocol, 
                        IP address, and port number that the server will bind to for incoming connections. EchoMix supports 
                        URLs with that start with either "tcp://" or "quic://" such as: ["tcp://192.168.1.1:30001"] and 
                        ["quic://192.168.1.1:40001"].</para>
                        <para>Type: []string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">BindAddresses</emphasis></para>
                        <para>BindAddresses are listener addresses that the server will bind to and accept connections on.
                                                These addresses are not advertised in the PKI.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">MetricsAddress</emphasis></para>
                        <para>MetricsAddress is the address/port to bind the Prometheus metrics
                            endpoint to.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">DataDir</emphasis></para>
                        <para>DataDir is the absolute path to the directory authority server state directory
                        where persistence.db will be written to disk and
                        where the servers&apos; cryptographic key materials
                        will be written to disk when the serrver is started with the "-g" commmand-line option.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">IsGatewayNode</emphasis></para>
                        <para>IsGatewayNode specifies if the server is a gateway or not.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">IsServiceNode</emphasis></para>
                        <para>IsServiceNode specifies if the server is a service node or not.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                </itemizedlist>'>

<!ENTITY logging '
<!--https://github.com/katzenpost/katzenpost/blob/c255fbbf421d5d9820553c18dc5dc6c9881ad547/authority/voting/server/config/config.go#L78-->
<para>The logging configuration section controls logging behavior across &program_name;.</para>
<programlisting>[Logging]
    Disable = false
    File = "katzenpost.log"
    Level = "INFO"</programlisting>
<itemizedlist>
    <listitem>
        <para><emphasis role="bold">Disable</emphasis></para>
        <para>Disables logging if set to <emphasis role="bold"
            >true</emphasis>.</para>
        <para>Type: bool</para>
        <para>Required:</para>
    </listitem>
    <listitem>
        <para><emphasis role="bold">File</emphasis></para>
        <para>Specifies the log file. If omitted, stdout is used.</para>
        <para>An absolute or relative file path can be specified. A relative path is 
        relative to the DataDir specified in the Server section of the 
        configuration.</para>
        <para>Type: string</para>
        <para>Required:</para>
    </listitem>
    <listitem>
        <para><emphasis role="bold">Level</emphasis></para>
        <para>Supported logging level values are ERROR | WARNING | NOTICE |INFO | DEBUG.</para>
        <para>Type: string</para>
        <para>Required:</para>
        <warning>
            <para>The DEBUG log level is unsafe for
                production use.</para>
        </warning>                               
    </listitem>
</itemizedlist>'>

<!ENTITY sphinxgeometry '
<!--https://github.com/katzenpost/katzenpost/blob/c255fbbf421d5d9820553c18dc5dc6c9881ad547/core/sphinx/geo/geo.go#L40-->
<para/>
<programlisting>[SphinxGeometry]
    PacketLength = 3082
    NrHops = 5
    HeaderLength = 476
    RoutingInfoLength = 410
    PerHopRoutingInfoLength = 82
    SURBLength = 572
    SphinxPlaintextHeaderLength = 2
    PayloadTagLength = 32
    ForwardPayloadLength = 2574
    UserForwardPayloadLength = 2000
    NextNodeHopLength = 65
    SPRPKeyMaterialLength = 64
    NIKEName = "x25519"
    KEMName = ""</programlisting>
<itemizedlist>
    <listitem>
        <para><emphasis role="bold">PacketLength</emphasis></para>
        <para>PacketLength is the length of a packet.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>
    <listitem>
        <para><emphasis role="bold">NrHops</emphasis></para>
        <para>NrHops is the number of hops through the mixnet, which determines the size</para>
        <para>of the Sphinx packet header.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">HeaderLength</emphasis></para>
        <para>HeaderLength is the length of the Sphinx packet header in
            bytes.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">RoutingInfoLength</emphasis></para>
        <para>RoutingInfoLength is the length of the routing info portion of the
            header.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">PerHopRoutingInfoLength</emphasis></para>
        <para>PerHopRoutingInfoLength is the length of the per hop routing
            info.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">SURBLength</emphasis></para>
        <para>SURBLength is the length of SURB.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">SphinxPlaintextHeaderLength</emphasis></para>
        <para>SphinxPlaintextHeaderLength is the length of the plaintext
            header.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">PayloadTagLength</emphasis></para>
        <para>PayloadTagLength is the length of the payload tag.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">ForwardPayloadLength</emphasis></para>
        <para>ForwardPayloadLength is the size of the payload.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>                    
    <listitem>
        <para><emphasis role="bold">UserForwardPayloadLength</emphasis></para>
        <para>the size of the usable payload.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>       
    <listitem>
        <para><emphasis role="bold">NextNodeHopLength</emphasis></para>
        <para>NextNodeHopLength is derived off the largest routing info</para>
        <para>block that we expect to encounter. Everything else just has
            a NextNodeHop + NodeDelay, or a Recipient, both cases which
            are shorter.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>  
    <listitem>
        <para><emphasis role="bold">SPRPKeyMaterialLength</emphasis></para>
        <para>SPRPKeyMaterialLength is the length of the SPRP key.</para>
        <para>Type: int</para>
        <para>Required:</para>
    </listitem>
    <listitem>
        <para><emphasis role="bold">NIKEName</emphasis></para>
        <para>NIKEName is the name of the NIKE (non-interactive key exchange) 
        scheme used by the mixnet&apos;s Sphinx
        packets. NIKEName and KEMName are mutually exclusive.</para>
        <para>Type: string</para>
        <para>Required:</para>
    </listitem>
    <listitem>
        <para><emphasis role="bold">KEMName</emphasis></para>
        <para>KEMName is the name of the KEM scheme used by the mixnet&apos;s Sphinx
            packet. NIKEName and KEMName are mutually exclusive.</para>
        <para>Type: string</para>
        <para>Required:</para>
    </listitem>
</itemizedlist>'>

<!ENTITY serverconfig '
<!--https://github.com/katzenpost/katzenpost/blob/c255fbbf421d5d9820553c18dc5dc6c9881ad547/server/config/config.go#L84-->
<!--The config code varies by role so it is not included in this entity.-->    
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Identifier</emphasis></para>
                        <para>Specifies the human-readable identifier for a node, and must be unique per mixnet. 
                        Identifier can be an FQDN but does not have to be.</para>
                        <para>Type: string</para>
                        <para>Required: Yes</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">WireKEM</emphasis></para>
                        <para>WireKEM is the wire protocol KEM (key encapsulation mechanism) scheme to use.</para>
                        <para>This configuration option supports the use of post-quantum cryptography to strengthen security. 
                        In this case the "Wire" protocol 
                        refers to our PQ Noise based protocol which is how all the dir auth nodes talk to one another. PQ Noise is a 
                        variation of the Noise protocol framework where the handshake patterns are algebraically transformed to replace
                        ECDH operations with KEM encapsulate/decapsulate operations.
                        </para>
						<para>The following KEM schemes are supported:
							"x25519", "x448", "mlkem768", "sntrup4591761", "frodo640shake", "mceliece348864", "mceliece348864f",
							"mceliece460896", "mceliece460896f", "mceliece6688128", "mceliece6688128f", "mceliece6960119", "mceliece6960119f",
							"mceliece8192128", "mceliece8192128f", "xwing", "Kyber768-X25519", "MLKEM768-X25519", "MLKEM768-X448",
							"CTIDH511", "CTIDH512", "CTIDH1024", "CTIDH2048", "CTIDH512-X25519", "CTIDH512-X25519"
						</para>
                        <para>Type: string</para>
                        <para>Required: Yes</para>
                    </listitem> 
                    <listitem>
                        <para><emphasis role="bold">PKISignatureScheme</emphasis></para>
                        <para>PKISignatureScheme specifies the cryptographic signature scheme used by all components of the mix network
                        when interacting with the PKI system. Mix nodes sign their descriptors using this signature scheme. Likewise, PKI documents
                        are signed by directory authority nodes using this signature scheme.</para>
                        <para>The following signature schemes are supported:
                        	"ed25519", "ed448", "Ed25519 Sphincs+", "Ed448-Sphincs+", "Ed25519-Dilithium2", "Ed448-Dilithium3"
                        </para>
                        <para>Type: string</para>
                        <para>Required: Yes</para>
                    </listitem>
                  <listitem>
                        <para><emphasis role="bold">Addresses</emphasis></para>
                        <para>Specifies a list of one or more Address URLs in a format that contains the transport protocol, 
                        IP address, and port number that the server will bind to for incoming connections. EchoMix supports 
                        URLs with that start with either "tcp://" or "quic://" such as: ["tcp://192.168.1.1:30001"] 
                        and ["quic://192.168.1.1:40001"].</para>
                        <para>Type: []string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">BindAddresses</emphasis></para>
                        <para>BindAddresses are listener addresses that the server will bind to and accept connections on.
						These addresses are not advertised in the PKI.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">MetricsAddress</emphasis></para>
                        <para>MetricsAddress is the address/port to bind the Prometheus metrics
                            endpoint to.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">DataDir</emphasis></para>
                        <para>DataDir is the absolute path to the directory authority server state directory 
                        where persistence.db will be written to disk and
                        where the servers&apos; cryptographic key materials 
                        will be written to disk when the serrver is started with the "-g" commmand-line option.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">IsGatewayNode</emphasis></para>
                        <para>IsGatewayNode specifies if the server is a gateway or not.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">IsServiceNode</emphasis></para>
                        <para>IsServiceNode specifies if the server is a service node or not.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                </itemizedlist>'>

<!ENTITY serverdebug '

<!--https://github.com/katzenpost/katzenpost/blob/c255fbbf421d5d9820553c18dc5dc6c9881ad547/server/config/config.go-->
                <para>Debug is the &program_name; server debug configuration for advanced tuning.</para>   
                <programlisting>[Debug]
                    NumSphinxWorkers = 16
                    NumServiceWorkers = 3
                    NumGatewayWorkers = 3
                    NumKaetzchenWorkers = 3
                    SchedulerExternalMemoryQueue = false
                    SchedulerQueueSize = 0
                    SchedulerMaxBurst = 16
                    UnwrapDelay = 250
                    GatewayDelay = 500
                    ServiceDelay = 500
                    KaetzchenDelay = 750
                    SchedulerSlack = 150
                    SendSlack = 50
                    DecoySlack = 15000
                    ConnectTimeout = 60000
                    HandshakeTimeout = 30000
                    ReauthInterval = 30000
                    SendDecoyTraffic = false
                    DisableRateLimit = false
                    GenerateOnly = false</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">NumSphinxWorkers</emphasis></para>
                        <para> specifies the number of worker instances to use for inbound Sphinx
                            packet processing.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">NumProviderWorkers</emphasis></para>
                        <para> specifies the number of worker instances to use for provider specific
                            packet processing.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">NumKaetzchenWorkers</emphasis></para>
                        <para> specifies the number of worker instances to use for Kaetzchen
                            specific packet processing.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">SchedulerExternalMemoryQueue</emphasis></para>
                        <para> will enable the experimental external memory queue that is backed by
                            disk.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">SchedulerQueueSize</emphasis></para>
                        <para> is the maximum allowed scheduler queue size before random entries
                            will start getting dropped. A value &lt;= 0 is treated as
                            unlimited.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">SchedulerMaxBurst</emphasis></para>
                        <para> is the maximum number of packets that will be dispatched per
                            scheduler wakeup event.</para>
                        <para>Type: </para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">UnwrapDelay</emphasis></para>
                        <para> is the maximum allowed unwrap delay due to queueing in
                            milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">GatewayDelay</emphasis></para>
                        <para>the maximum allowed gateway node worker delay due to queueing</para>
                        <para> in milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">ServiceDelay</emphasis></para>
                        <para> is the maximum allowed provider delay due to queueing in
                            milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para> 
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">KaetzchenDelay</emphasis></para>
                        <para> is the maximum allowed kaetzchen delay due to queueing in
                            milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">SchedulerSlack</emphasis></para>
                        <para> is the maximum allowed scheduler slack due to queueing and or
                            processing in milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">SendSlack</emphasis></para>
                        <para> is the maximum allowed send queue slack due to queueing and or
                            congestion in milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">DecoySlack</emphasis><emphasis role="bold"
                            /></para>
                        <para> is the maximum allowed decoy sweep slack due to various external
                            delays such as latency before a loop decoy packet will be considered
                            lost.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">ConnectTimeout</emphasis></para>
                        <para> specifies the maximum time a connection can take to establish a
                            TCP/IP connection in milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">HandshakeTimeout</emphasis></para>
                        <para> specifies the maximum time a connection can take for a link protocol
                            handshake in milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">ReauthInterval</emphasis></para>
                        <para> specifies the interval at which a connection will be reauthenticated
                            in milliseconds.</para>
                        <para>Type: int</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">SendDecoyTraffic</emphasis></para>
                        <para>enables sending decoy traffic. This is still experimental and untuned
                            and thus is disabled by default. WARNING: This option will go away once
                            decoy traffic is more concrete.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">DisableRateLimit</emphasis></para>
                        <para> disables the per-client rate limiter. This option should only be used
                            for testing.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">GenerateOnly</emphasis></para>
                        <para> halts and cleans up the server right after long term key
                            generation.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                </itemizedlist>'>
                
<!ENTITY  management '
<!--https://github.com/katzenpost/katzenpost/blob/c255fbbf421d5d9820553c18dc5dc6c9881ad547/server/config/config.go#L729-->
                <para>Management is the &program_name; management interface configuration. The management section specifies connectivity information for the &program_name;
                    control protocol which can be used to make configuration changes during
                    run-time. An example configuration looks like this:</para>
                <programlisting>[Management]
    Enable = false
    Path = "/voting_mixnet/mix1/management_sock"</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Enable</emphasis></para>
                        <para>Enables the management interface if set to true.</para>
                        <para>Type: bool</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Path</emphasis></para>
                        <para>Specifies the path to the management interface socket.
                            <?oxy_comment_start author="dwrob" timestamp="20240814T171718-0700" comment="Confusing wording."?>If
                            left empty, then management_sock will be used under the DataDir.</para><?oxy_comment_end?>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                </itemizedlist>'>
                
<!ENTITY  pki '
                <para>The PKI section contains the directory authority configuration for a mix, gateway, or service node.</para>
                <programlisting>[PKI]
    [PKI.Voting]
    
        [[PKI.Voting.Authorities]]
            Identifier = "auth1"
            IdentityPublicKey = "-----BEGIN ED25519 PUBLIC KEY-----\n/v3qYgh2TvV5ZqEVgwcjJHG026KlRV6HC16xZS3TkiI=\n-----END ED25519 PUBLIC KEY-----\n"
            PKISignatureScheme = "Ed25519"
            LinkPublicKey = "-----BEGIN XWING PUBLIC KEY-----\nJeFaZoYQEOO71zPFFWjL7DyDp4gckGiiqLCB2RNwMacZ7wuroYugiXyir+eqvkpe\nw5k3sqm9LlS5xaEqsmJpRxYCOmaHdXARwNA6rOFwEAN>
            WireKEMScheme = "xwing"
            Addresses = ["127.0.0.1:30001"]
    
        [[PKI.Voting.Authorities]]
            Identifier = "auth2"
            IdentityPublicKey = "-----BEGIN ED25519 PUBLIC KEY-----\n60KQRhG7njt+kLQuwWlfRzJeOp4elM1/k26U/k52SjI=\n-----END ED25519 PUBLIC KEY-----\n"
            PKISignatureScheme = "Ed25519"
            LinkPublicKey = "-----BEGIN XWING PUBLIC KEY-----\nHVR2m7i6G6cf1qxUvyEr3KC7JvAMv5Or1rgzvUcllnmhN8BGmOmWhrWLggBNsyyS\nx+gbkfczC8WZr4GDAXOmGchhEYRy9opjqxEBENW9IHU>
            WireKEMScheme = "xwing"
            Addresses = ["127.0.0.1:30002"]
    
        [[PKI.Voting.Authorities]]
            Identifier = "auth3"
            IdentityPublicKey = "-----BEGIN ED25519 PUBLIC KEY-----\naZUXqznyLO2mKDceIDs0obU6GAFZa3eKUDXo2RyWpBk=\n-----END ED25519 PUBLIC KEY-----\n"
            PKISignatureScheme = "Ed25519"
            LinkPublicKey = "-----BEGIN XWING PUBLIC KEY-----\nEZukXtZwHTjGj7tCI0kmUcq0QEtA4HMIz2OPiXQVeaK9XVBDNQUKq8iGRvzJAodM\nmJiEXYw6vvTJhPaik4OgMpZvwQYNn9BmwrcE7VxQfua>
            WireKEMScheme = "xwing"
            Addresses = ["127.0.0.1:30003"]</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Identifier</emphasis></para>
                        <para>Specifies the human-readable identifier for a node, and must be unique per mixnet. 
                        Identifier can be an FQDN but does not have to be.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">IdentityPublicKey</emphasis></para>
                        <para>String containing the node&apos;s public identity key in PEM format. IdentityPublicKey is 
                        the node&apos;s permanent identifier and is used to verify cryptographic signatures produced 
                        by its private identity key.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">PKISignatureScheme</emphasis></para>
                        <para>Specifies the cryptographic signature scheme which will be used by all components of 
                        the mix network when interacting with the PKI system. Mix nodes sign their descriptors using 
                        this signature scheme, and dirauth nodes similarly sign PKI documents using this signature scheme.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">LinkPublicKey</emphasis></para>
                        <para>String containing the peer&apos;s public link-layer key in PEM format. LinkPublicKey must match the specified WireKEMScheme.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">WireKEMScheme</emphasis></para>
                        <para>WireKEMScheme is the wire protocol KEM scheme to use.</para>
                        <para>Type: string</para>
                        <para>Required:</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Addresses</emphasis></para>
                        <para>Specifies a list of one or more Address URLs in a format that contains the transport protocol, 
                        IP address, and port number that the server will bind to for incoming connections. EchoMix supports 
                        URLs with that start with either "tcp://" or "quic://" such as: ["tcp://192.168.1.1:30001"] 
                        and ["quic://192.168.1.1:40001"].</para>
                        <para>Type: []string</para>
                        <para>Required:</para>
                    </listitem>
                </itemizedlist>'>
                
<!ENTITY WireKEMScheme '                
                    <!-- WireKEMScheme ... the link layer -->
                    <!-- This is the API term just for the dirauths. This is a flaw. -->
                    
                    <listitem>
                        <para><emphasis role="bold">WireKEMScheme</emphasis></para>
                        <para>Specifies the key encapsulation mechanism (KEM) scheme
                            for the <link xlink:href="https://eprint.iacr.org/2022/539">PQ
                                Noise</link>-based wire protocol (link layer) that nodes use
                            to communicate with each other. PQ Noise is a post-quantum variation of
                            the <link xlink:href="https://noiseprotocol.org/">Noise protocol
                                framework</link>, which algebraically transforms ECDH handshake
                            patterns into KEM encapsulate/decapsulate operations.</para>
                            
                            <para>This configuration option supports the optional use of
                            post-quantum cryptography to strengthen security. The following KEM
                            schemes are supported: <itemizedlist>
                                <listitem>
                                    <para><emphasis role="bold">Classical:</emphasis> "x25519",
                                        "x448"</para>
                                     <note><para>X25519 and X448 are actually non-interactive key-exchanges
                                            (NIKEs), not KEMs. &program_name; uses
                                            a Hashed ElGamal cryptographic construction
                                            to convert them from NIKEs to KEMs.</para></note>
                                </listitem>
                            </itemizedlist><itemizedlist>
                                <listitem>
                                    <para><emphasis role="bold"> Post-quantum:</emphasis>
                                        "mlkem768", "sntrup4591761", "frodo640shake",
                                        "mceliece348864", "mceliece348864f", "mceliece460896",
                                        "mceliece460896f", "mceliece6688128", "mceliece6688128f",
                                        "mceliece6960119", "mceliece6960119f", "mceliece8192128",
                                        "mceliece8192128f", "xwing", "Kyber768-X25519",
                                        "MLKEM768-X25519", "MLKEM768-X448", "CTIDH511", "CTIDH512",
                                        "CTIDH1024", "CTIDH2048", "CTIDH512-X25519",
                                        "CTIDH512-X25519"</para>
                                </listitem>
                            </itemizedlist></para>						
                        <para>Type: string</para>
                        <para>Required: Yes</para>                    
                    </listitem>'>     
                    
<!ENTITY WireKEM '                
                    <!-- WireKEM ... the  link layer -->
                    <!-- This is the API term just for the Server options (mix, gateway, service). This is a flaw. -->
                    
                    <listitem>
                        <para><emphasis role="bold">WireKEM</emphasis></para>
                        <para>WireKEM specifies the key encapsulation mechanism (KEM) scheme
                            for the <link xlink:href="https://eprint.iacr.org/2022/539">PQ
                                Noise</link>-based wire protocol (link layer) that nodes use
                            to communicate with each other. PQ Noise is a post-quantum variation of
                            the <link xlink:href="https://noiseprotocol.org/">Noise protocol
                                framework</link>, which algebraically transforms ECDH handshake
                            patterns into KEM encapsulate/decapsulate operations.</para>
                            
                            <para>This configuration option supports the optional use of
                            post-quantum cryptography to strengthen security. The following KEM
                            schemes are supported: <itemizedlist>
                                <listitem>
                                    <para><emphasis role="bold">Classical:</emphasis> "x25519",
                                        "x448"</para>
                                     <note><para>X25519 and X448 are actually non-interactive key-exchanges
                                            (NIKEs), not KEMs. &program_name; uses
                                            a Hashed ElGamal cryptographic construction
                                            to convert them from NIKEs to KEMs.</para></note>
                                </listitem>
                            </itemizedlist><itemizedlist>
                                <listitem>
                                    <para><emphasis role="bold"> Post-quantum:</emphasis>
                                        "mlkem768", "sntrup4591761", "frodo640shake",
                                        "mceliece348864", "mceliece348864f", "mceliece460896",
                                        "mceliece460896f", "mceliece6688128", "mceliece6688128f",
                                        "mceliece6960119", "mceliece6960119f", "mceliece8192128",
                                        "mceliece8192128f", "xwing", "Kyber768-X25519",
                                        "MLKEM768-X25519", "MLKEM768-X448", "CTIDH511", "CTIDH512",
                                        "CTIDH1024", "CTIDH2048", "CTIDH512-X25519",
                                        "CTIDH512-X25519"</para>
                                </listitem>
                            </itemizedlist></para>						
                        <para>Type: string</para>
                        <para>Required: Yes</para>                    
                    </listitem>'>                