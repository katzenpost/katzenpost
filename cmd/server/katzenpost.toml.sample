# Katzenpost server configuration file.

#
# The Server section contains mandatory information common to all nodes.
#

[Server]

  # Identifier is the human readable identifier for the node (eg: FQDN).
  Identifier = "example.com"

  # Addresses are the IP address/port combinations that the server will bind
  # to for incoming connections.
  Addresses = [ "192.0.2.1:29483", "[2001:DB8::1]:29483" ]

  # DataDir is the absolute path to the server's state files.
  DataDir = "/var/lib/katzenpost"

  # IsProvider specifies if the server is a provider (vs a mix).
  IsProvider = true

#
# The PKI section contains the directory authority configuration.
#

[PKI]

  # Nonvoting is a simple non-voting PKI for test deployments.
  [PKI.Nonvoting]

    # Address is the IP address/port combination of the directory authority.
    Address = "192.0.2.2:2323"

    # PublicKey is the directory authority's public key in Base64 or Base16 format.
    PublicKey = "kAiVchOBwHVtKJVFJLsdCQ9UyN2SlfhLHYqT8ePBetg="
    # PublicKey = "900895721381C0756D28954524BB1D090F54C8DD9295F84B1D8A93F1E3C17AD8"

#
# The Logging section controls the logging.
#

[Logging]

  # Disable disables logging entirely.
  Disable = false

  # File specifies the log file, if omitted stdout will be used.
  # File = "/var/log/katzenpost.log"

  # Level specifies the log level out of `ERROR`, `WARNING`, `NOTICE`,
  # `INFO` and `DEBUG`.
  #
  # Warning: The `DEBUG` log level is unsafe for production use.
  Level = "DEBUG"

#
# The Provider secton specifies the Provider configuration.
#

[Provider]

  # optional registration HTTP service is turned off by default
  EnableUserRegistrationHTTP = true
  UserRegistrationHTTPAddresses = [ "127.0.0.1:8080"]

  # Here's the example internal Kaetzchen service configs
  [[Provider.Kaetzchen]]
    Capability = "loop"
    Endpoint = "+loop"
    Disable = false

  [[Provider.Kaetzchen]]
    Capability = "keyserver"
    Endpoint = "+keyserver"
    Disable = false

  # Here's an example external Kaetzchen service plugin config
  [[Provider.PluginKaetzchen]]
    Capability = "echo"
    Endpoint = "+echo"
    Disable = false
    Command = "/var/lib/katzenpost/plugins/echo"
    MaxConcurrency = 3

  # UserDB is the user database configuration.  If left empty the simple
  # BoltDB backed user database will be used with the default database.
  # [Provider.UserDB]

    # Backend selects the UserDB backend to be used.
    # Backend = "bolt"

    # Bolt is the BoltDB backed user database. (`bolt`)
    # [Provider.UserDB.Bolt]

      # UserDB is the path to the user database.  If left empty it will use
      # `users.db` under the DataDir.
      # UserDB = "fuck"

    # Extern is the externally defined (RESTful http) user database. (`extern`)
    # [Provider.UserDB.Extern]

      # ProviderURL is the base URL used for the external provider
      # authentication API.  It should be of the form `http://localhost:8080`.
      # ProviderURL = "http://localhost:8080"

  # SpoolDB is the user message spool configuration.  If left empty, the
  # simple BoltDB backed user message spool will be used with the default
  # database.
  # [Provider.SpoolDB]

    # Backend selects the SpoolDB backend to be used.
    # Backend = "bolt"

    # Bolt is the BoltDB backed user message spool. (`bolt`)
    # [Provider.SpoolDB.Bolt]

      # SpoolDB is the path to the user message spool.  If left empty, it will
      # use `spool.db` under the DataDir.
      # SpoolDB = "fuck"

#
# The Management section specifies the management interface configuration.
#

[Management]

  # Enable enables the management interface.
  Enable = true

  # Path specifies the path to the management interface socket.  If left
  # empty it will use `management_sock` under the DataDir.
  # Path = ""
