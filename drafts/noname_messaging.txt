Noname Messaging System Specification
David Stainton

Version 0

Abstract

   This document describes the high level architecture of the Noname
   Messaging System which is specifically designed to provide strong
   location hiding properties, tunable resistance to longterm
   statistical disclosure attacks and resistance to some active
   attacks.

1. Introduction

   This specification is inspired by Pond and Petmail [POND] [PETMAIL]
   and also uses many designs from the mix network literature,
   especially the [LOOPIX], Katzenpost [KATZMIXNET] and [MIXMINION]
   systems. I describes a variation of the Katzenpost decryption mix
   network messaging system where clients use the PANDA protocol to
   establish bidirectional communication channels. These channels are
   composed by the communication participants exchanging one or more
   descriptors of unidirectional dead drops and ephemeral keys for the
   Signal Double Ratchet. [SIGNAL]

   This document is meant to be read with the accompanying
   specification documents:

      * [KATZMIXNET] - Katzenpost Mix Network Specification

      * [KATZMIXWIRE] - Katzenpost Mix Network Wire Protocol Specification

      * [SPHINXSPEC] - Sphinx Mix Network Cryptographic Packet Format Specification

      * [LIONESS] - The LIONESS Wide-Block-Cipher

      * [KATZMIXPKI] - Katzenpost Mix Network Public Key
        Infrastructure Specification

      * [KAETZCHEN] - Katzenpost Provider-side Autoresponder Extension

      * [KATZPANDA] - Katzenpost PANDA Autoresponder Extension

      * [KATZDEADDROP] - Katzenpost Dead Drop Extension

1.1 Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

1.2 Terminology

   * ARQ - Automatic Repeat reQuest, a protocol scheme which
     uses ACKnowledgement messages AND retransmissions to achieve
     end to end reliability.

   * SURB - The Single Use Reply Block is a cryptographic delivery
     token which was first introduced by the Mixminion design
     [MIXMINION] and revised by the Sphinx cryptographic packet format.
     [SPHINX] [SPHINXSPEC]

1.3 Differences From The Katzenpost Messaging System

   * Contact discovery, key exchanges and communication channel setup
     is done using the PANDA protocol. [PANDA] There is no universal
     naming scheme for mailbox addresses and no spam problem either.

   * End to end message encryption is done using the Signal Double
     Ratchet instead always using static keys in a one-way Noise
     handshake pattern. [NOISE]

   * Sphinx packet cryptographic primitives have been changed to make
     it easier to implement. See section "4.1 Sphinx Cryptographic
     Primitives" of this document for the details.

   * Sphinx packet geometry has been changed as specified in section
     "4.2 Sphinx Packet Parameters" of this document.

2. System Overview

   Mixminion introduced the Single Use Reply Block, also known as a
   SURB which is a cryptographic delivery token for latent message
   delivery. SURBs have a relatively short lifetime because they are
   essentially a mixnet packet header which is encrypted with the
   routing keys of several mixes and therefore expire when any of the
   mixes rotate their key. In the Katzenpost system this key rotation
   epoch is every 3 hours. [KATZMIXPKI] It is NOT desireable to have
   long lived mix routing keys because this weakens the Forward
   Secrecy. [SPHINX] [SPHINXSPEC] We conclude that SURBs are NOT
   suitable for establishing a bidirectional communication channel for
   clients that frequently go offline for time durations greater than
   the mix key rotation epoch. Instead a Katzenpost autoresponder
   [KAETZCHEN] based dead drop [KATZDEADDROP] service can be used.

   Unlike SURBs dead drop descriptors do not have any inherent
   expiration. However, for the purpose of reducing exposure to
   longterm statistical disclosure attacks, these descriptors shall
   specify an expiration. The expiration specifies how far into the
   future the receiver promises to check for messages in the dead drop
   queue. Client communication partners MUST periodically exchange new
   dead drop descriptors before the old dead drop descriptors expire.

   Communication partnerships are established by using the PANDA
   protocol [PANDA] to facilitate a Signal handshake and an exchange
   of dead drop delivery descriptors. Reliability is achieved using
   two differently tuned ARQ protocols, providing reliability for
   communication from client to client as well as client to dead
   drop. Clients use a cryptographic storage subsystem to persist
   their state (consisting of key material, cryptographic ratchet
   state, dead drop delivery descriptors and ARQ scheduler state).

   Dead drops can also be used for one-way communication. Consider for
   instance a user, Alice who reads a message on a anonymous bulletine
   board system and replies using the supplied dead drop
   descriptor. Alice can optionally include a dead drop descriptor in
   her message. This would establish a full-duplex communication
   channel.

3. Threat Model

3.1 Security Goals

   Noname clients make use of several dead drops, one for each contact
   for the purpose of queueing received encrypted messages for later
   retrieval. We have several security goals for this delivery
   protocol, we shall proceed with Brian Warner's mode of analysis and
   quote several security properties from the [PETMAIL] document :

      """
      * S0: Two different senders cannot tell if they're talking to the
        same recipient or not.
   
      * M0: The mailbox server cannot tell which message came from which
        sender, not even that two messages came from the same sender, nor
        can it determine how many senders might be configured for each
        recipient.

      * R0: The recipient can use the transport information to accurately
        identify the sender.

      * Rev0: R can revoke one sender without involving the remaining ones.
      """

   Our Noname messaging security goals in short form are expressed as:

      S0 M0 R0 Rev0

3.2 Categories of Attacks

   This system uses a decryption mix network based transport and therefore is
   vulnerable to several attack categories:

      * epistemic attacks

      * n-1 attacks (also known as blending attacks)

      * compulsion attacks

      * statistical disclosure attacks

      * tagging and replay attacks

      * denial of service attacks

   The mix network AND Providers are operated by a closed set of
   entities which are authorized by the Directory Authority system's
   whitelist of mix operator signing keys. [KATZMIXPKI] This Directory
   Authority system is a semi-decentralized system that uses a
   cryptographic threshold voting scheme to produce a full view of the
   network. Epistemic attacks are avoided by providing all clients
   with the full view of the network. A partial view would make
   clients vulnerable to epistemic attacks such as [FINGERPRINTING]
   [BRIDGING] [LOCALVIEW].

   Vulnerability to compulsion attacks is mainly mitigated by means of
   the epoch key rotation where each participating mix destroys it's
   Sphinx routing key and uses a new key. Future implementations may
   include additional defenses. [FORWARDMIX] [COMPULS05]

   Various design elements help to defend against longterm statistical
   disclosure attacks (also known as intersection attacks) such as:

      * Loopix decoy traffic

      * short term Provider with message queueing and
        direction wire protocol for message retrieval [KATZMIXWIRE]

      * medium term Provider with messaging queueing and remote
        retrieval service via SURBs

3.3 Justification For a PANDA Katzenpost Service

   User key exchanges are done using the PANDA protocol [PANDA]
   implemented as a Katzenpost Provider side autoresponder
   service. [KATZPANDA] [KAETZCHEN] This means that bidirectional
   interaction with the PANDA service is done using the mix network
   transport for several advantages:

      * client to server unlinkability: Prevent sufficiently global
        adversaries from learning which PANDA server a given client is
        interacting with. Prevent sufficiently global adversaries from
        learning which clients are interacting with a given PANDA server.

      * mix PANDA protocol messages with other types of traffic

      * sender and receiver unobservability of server

      * sender and receiver unobservability of client

      * location hiding properties for clients

4. Packet Format

   Here we specify slightly different Sphinx packet cryptographic
   primitives and parameterizations.

4.1 Sphinx Cryptographic Primitives

   For the current version of the Noname Messaging System, let the
   following cryptographic primitives be used as described in the
   Sphinx specification. [SPHINX] [SPHINXSPEC]

   Note that we use the Lioness wide block cipher instead of AEZ
   to make it easier to implement.

    * H(M) - As the output of this primitive is only used locally to
             a Mix, any suitable primitive may be used.

    * MAC(K, M) - HMAC-SHA256-128 [RFC6234], M_KEY_LENGTH of 32 bytes
                  (256 bits), and MAC_LENGTH of 16 bytes (128 bits).

    * KDF(SALT, IKM) - HKDF-SHA256, HKDF-Expand only, with SALT used
                 as the info parameter.

    * S(K, IV)  - CTR-AES128 [SP80038A], S_KEY_LENGTH of 16 bytes
                  (128 bits), and S_IV_LENGTH of 12 bytes (96 bits),
                  using a 32 bit counter.

    * SPRP_Encrypt(K, M)/SPRP_Decrypt(K, M) - the LIONESS
                  Wide-Block-Cipher construct [LIONESS], with a
                  concrete parameterization of
                  LIONESS-BLAKE2b-ChaCha20 based around the BLAKE2b
                  [RFC7693] hash algorithm and ChaCha20 [RFC7539]
                  stream cipher. See section
                  "3. LIONESS-BLAKE2b-ChaCha20" of [LIONESS]. In
                  summary this construction of Lioness provides a
                  security level of at least 256 bits while using a
                  key 128 bytes in size which we refer to as
                  SPRP_KEY_LENGTH and supports a per-call
                  initialization vector of 48 bytes.

    * EXP(X, Y) - X448 [RFC7748] scalar multiply, GROUP_ELEMENT_LENGTH
                  of 56 bytes (448 bits), G is the X448 base point.

4.2 Sphinx Packet Parameters

   The following parameters are used as for the Katzenpost Mix Network
   instantiation of the Sphinx Packet Format:

    * AD_SIZE            - 2 bytes.

    * SECURITY_PARAMETER - 32 bytes.

    * PER_HOP_RI_SIZE    - (XXX/ya: Addition is hard, let's go shopping.)


    * NODE_ID_SIZE       - 56 bytes, the size of the Ed448-Goldilocks public key,
                           used as Node identifiers.

    * RECIPIENT_ID_SIZE  - 32 bytes, the maximum size of local-part
                           component in an e-mail address.

    * SURB_ID_SIZE       - 32 bytes.

    * MAX_HOPS           - 5, the ingress provider, a set of three mixes,
                           and the egress provider.

    * PAYLOAD_SIZE       - X kilobytes?

    * KDF_INFO           - The byte string 'katzenpost-kdf-v0-hkdf-sha256'.

   The Sphinx Packet Header additional_data field is specified as follows:

      struct {
          uint8_t version;  /* 0x01 */
          uint8_t reserved; /* 0x00 */
      } KatzenpostAdditionalData;

   All nodes MUST reject Sphinx Packets that have additional_data that
   is not as specified in the header.

5. Bidirectional Communication Message Channels

   Bidirectional communication partnerships are first established
   using the [PANDA] protocol to faciliate a [SIGNAL] handshake AND
   the exchange of dead drop descriptors. Each client uses one dead
   drop per contact. There is no universal naming scheme hence the
   namesake of this document. Like Petmail and Pond, clients choose
   the name for each of their contacts.

   Upon participation in the PANDA protocol the client registers a new
   dead drop and creates a new Signal double ratchet session for use
   with the new contact. Clients MUST exchange fresh dead drop
   descriptors before old ones expire.

6. Bulletin Board System
X. Anonymity Considerations
Y. Security Considerations
Z. Future Work

Appendix A. References

Appendix A.1 Normative References

   [RFC2119]   Bradner, S., "Key words for use in RFCs to Indicate
               Requirement Levels", BCP 14, RFC 2119,
               DOI 10.17487/RFC2119, March 1997,
               <http://www.rfc-editor.org/info/rfc2119>.

   [LOOPIX]    Piotrowska, A., Hayes, J., Elahi, T., Meiser, S., Danezis, G.,
               “The Loopix Anonymity System”,
               USENIX, August 2017,
               <https://arxiv.org/pdf/1703.00536.pdf>.

   [POND]   Langley, A., "Pond", November 2012,
            <https://github.com/agl/pond/tree/master/doc>.

   [KATZMIXNET]  Angel, Y., Danezis, G., Diaz, C., Piotrowska, A., Stainton, D.,
                "Katzenpost Mix Network Specification", June 2017,
                <https://github.com/Katzenpost/docs/blob/master/specs/mixnet.txt>.

   [KATZMIXPKI]  Angel, Y., Piotrowska, A., Stainton, D.,
                 "Katzenpost Mix Network Public Key Infrastructure Specification", December 2017,
                 <https://github.com/katzenpost/docs/blob/master/specs/pki.txt>.

   [KATZMIXWIRE] Angel, Y., "Katzenpost Mix Network Wire Protocol Specification", June 2017.
                <https://github.com/katzenpost/docs/blob/master/specs/wire-protocol.txt>.

   [SPHINXSPEC] Angel, Y., Danezis, G., Diaz, C., Piotrowska, A., Stainton, D.,
                "Sphinx Mix Network Cryptographic Packet Format Specification"
                July 2017, <https://github.com/katzenpost/docs/blob/master/specs/sphinx.txt>.

   [LIONESS]  Angel, Y., 2017, "The LIONESS Wide-Block-Cipher",
              <https://github.com/katzenpost/docs/blob/master/specs/LIONESS.TXT>.

   [RFC7748]   Langley, A., Hamburg, M., and S. Turner, "Elliptic Curves
               for Security", RFC 7748, January 2016.

   [KAETZCHEN]  Angel, Y., Kaneko, K., Stainton, D.,
                "Katzenpost Provider-side Autoresponder", January 2018,
                <https://github.com/Katzenpost/docs/blob/master/drafts/kaetzchen.txt>.

   [KATZDEADDROP] Stainton, D., "Katzenpost Dead Drop Extension", February 2018,
                  <https://github.com/Katzenpost/docs/blob/master/drafts/deaddrop.txt>.

   [KATZPANDA]   Stainton, D., "Katzenpost PANDA Autoresponder Extension",
                 March 2018, <https://github.com/katzenpost/docs/blob/master/drafts/panda.txt>.

Appendix A.2 Informative References

   [SIGNAL]   Perrin, T., Marlinspike, M., "The Double Ratchet Algorithm", November 2016,
              <https://signal.org/docs/specifications/doubleratchet/>.

   [NOISE]    Perrin, T., "The Noise Protocol Framework", May 2017,
              <https://noiseprotocol.org/noise.pdf>.

   [PETMAIL]  Warner, B., "Petmail mailbox-server delivery protocol",
                Proceedings of Brian Warner's blog, July 2015,
                <http://www.lothar.com/blog/53-petmail-delivery/>.

   [MIXMINION]  Danezis, G., Dingledine, R., Mathewsom, N.,
                "Mixminion: Design of a Type III Anonymous Remailer Protocol"
                <https://www.mixminion.net/minion-design.

   [SPHINX]  Danezis, G., Goldberg, I., "Sphinx: A Compact and
             Provably Secure Mix Format", DOI 10.1109/SP.2009.15,
             May 2009, <http://research.microsoft.com/en-us/um/people/gdane/papers/sphinx-eprint.pdf>.

   [PANDA]   Appelbaum, J., "Going Dark: Phrase Automated Nym Discovery Authentication",
             <https://github.com/agl/pond/tree/master/papers/panda>.

   [FORWARDMIX] Danezis, G., "Forward Secure Mixes",
                In the Proceedings of 7th Nordic Workshop on Secure IT Systems,
                November 2002, <https://www.freehaven.net/anonbib/cache/Dan:SFMix03.pdf>.

   [COMPULS05]  Danezis, G., Clulow, J., "Compulsion Resistant Anonymous Communications",
                Proceedings of Information Hiding Workshop, June 2005,
                <https://www.freehaven.net/anonbib/cache/ih05-danezisclulow.pdf>.

   [FINGERPRINTING] Danezis, G., Clayton, R.,
                    "Route Finger printing in Anonymous Communications",
                    <https://www.cl.cam.ac.uk/~rnc1/anonroute.pdf>.

   [BRIDGING] Danezis, G., Syverson, P.,
              "Bridging and Fingerprinting: Epistemic Attacks on Route Selection",
              In the Proceedings of PETS 2008, Leuven, Belgium, July 2008,
              <https://www.freehaven.net/anonbib/cache/danezis-pet2008.pdf>.

   [LOCALVIEW] Gogolewski, M., Klonowski, M., Kutylowsky, M.,
               "Local View Attack on Anonymous Communication",
               <https://www.freehaven.net/anonbib/cache/esorics05-Klonowski.pdf>.

   [MIRANDA] Leibowitz, H., Piotrowska, A., Danezis, G., Herzberg, A., 2017,
             "No right to ramain silent: Isolating Malicious Mixes"
             <https://eprint.iacr.org/2017/1000.pdf>.

   [MIXRELIABLE] Dingledine, R., Freedman, M., Hopwood, D., Molnar, D., 2001
                 "A Reputation System to Increase MIX-Net Reliability",
                 In Information Hiding, 4th International Workshop,
                 <https://www.freehaven.net/anonbib/cache/mix-acc.pdf>.

   [YEE02] Yee, Ka-Ping., "User Interaction Design for Secure Systems",
           Computer Science Department, University of California, Berkeley,
           May 2002, <http://zesty.ca/pubs/csd-02-1184.pdf>.
