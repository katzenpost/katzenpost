Noname Messaging System Specification
David Stainton

Version 0

Abstract

   This document describes the high level architecture of the Noname
   Messaging System which is specifically designed to provide strong
   location hiding properties, tunable resistance to longterm
   statistical disclosure attacks and resistance to some active
   attacks.

1. Introduction

   This specification is inspired by [POND] and [PETMAIL] but uses
   many designs from the mix network literature, especially the
   [LOOPIX], Katzenpost [KATZMIXNET] and [MIXMINION] systems. I
   describes a variation of the Katzenpost decryption mix network
   messaging system where clients use the PANDA protocol to establish
   bidirectional communication channels. These channels are
   constructed using ephemeral keys for the [SIGNAL] double ratchet
   AND descriptors of unidirectional dead drops. [KATZDEADDROP]
   [KAETZCHEN]

1.1. Terminology

   * ARQ - automatic repeat request

1.2 Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

2. System Overview

   Mixminion introduced the Single Use Reply Block, also known as a
   SURB which is a cryptographic delivery token for latent message
   delivery. SURBs have a relatively short lifetime because they are
   essentially a mixnet packet header which is encrypted with the
   routing keys of several mixes and therefore expire when any of the
   mixes rotate their key. In the Katzenpost system this key rotation
   epoch is every 3 hours. [KATZMIXPKI] It is NOT desireable to have
   long lived mix routing keys because this weakens the Forward
   Secrecy. [SPHINX] [SPHINXSPEC] We therefore that SURBs are NOT
   suitable for establishing a bidirectional communication channel for
   clients that frequently go offline for time durations greater than
   the mix key rotation epoch. Instead a Katzenpost autoresponder
   [KAETZCHEN] based dead drop [KATZDEADDROP] service can be used.

   Unlike SURBs dead drop descriptors do not have any inherent
   expiration. However, for the purpose of reducing exposure to
   longterm statistical disclosure attacks, these descriptors shall
   specify an expiration. The expiration specifies how far into the
   future the receiver promises to check for messages in the dead drop
   slot. Client communication partners MUST periodically exchange new
   dead drop descriptors before the old dead drop descriptors expire.

   Communication partnerships are established by using [PANDA] to
   facilitate a Signal handshake and an exchange of dead drop delivery
   descriptors. Reliability is achieved using two differently tuned
   ARQ protocols, providing reliability for communication from client
   to client as well as client to dead drop. Clients use a
   cryptographic storage subsystem to persist state consisting of key
   material, cryptographic ratchet state, dead drop delivery
   descriptors and ARQ scheduler state.

   Dead drops can also be used for one-way communication. Consider for
   instance a user, Alice who reads a message on a anonymous bulletine
   board system and replies using the supplied dead drop
   descriptor. Alice can optionally include a dead drop descriptor in
   her message. This would establish a full-duplex communication
   channel.

3. Threat Model

3.1 Security Goals

   Noname clients make use of several dead drops, one for each contact
   for the purpose of queueing received encrypted messages for later
   retrieval. We have several security goals for this delivery
   protocol, we shall proceed with Brian Warner's mode of analysis and
   quote several security properties from the [PETMAIL] document :

      """
      * S0: Two different senders cannot tell if they're talking to the
        same recipient or not.
   
      * M0: The mailbox server cannot tell which message came from which
        sender, not even that two messages came from the same sender, nor
        can it determine how many senders might be configured for each
        recipient.

      * R0: The recipient can use the transport information to accurately
        identify the sender.

      * Rev0: R can revoke one sender without involving the remaining ones.
      """

   This can be concisely express in short form as: S0 M0 R0 Rev0. In the
   case of Noname, M0's "mailbox server" means "dead drop server".

3.2 Categories of Attacks

   This system uses a mix network based transport and therefore is
   vulnerable to the four attack categories which affect all mix
   networks:

      * epistemic attacks

      * n-1 attacks (also known as blending attacks)

      * compulsion attacks

      * statistical disclosure attacks

   Notice that I do not mention Sybil attacks. This is because unlike
   the Tor network we are not attempting to design a volunteer
   operated network. Instead, the mix network AND Providers are
   operated by a closed set of entities which are authorized by the
   Directory Authority system's whitelist of mix operator signing
   keys. [KATZMIXPKI] This Directory Authority system is a
   semi-decentralized system that uses a cryptographic threshold
   voting scheme to produce a full view of the network. Epistemic
   attacks are avoided by providing all clients with the full view of
   the network. A partial view would make clients vulnerable to
   epistemic attacks such as [FINGERPRINTING] [BRIDGING] [LOCALVIEW].

   n-1 attacks are assumed to NOT be a problem since they are obvious
   in that they require a denial of service attack.

   Vulnerability to compulsion attacks is mainly mitigated by means of
   the epoch key rotation where each participating mix destroys it's
   Sphinx routing key and uses a new key.

   The Loopix decoy traffic, Provider model and the Provider side dead
   drop autoresponder helps to mitigate traffic against statistcal
   diclosure attacks.

4. One Way Communication: Using a Well-Known Dead Drop

5. Bidirectional Communication Partnerships

   This messaging system's bidirectional messaging protocol does not
   have any SPAM problem, however it is vulnerable to denial of
   service attacks. Let us not conflate these two subtley related but
   different issues. Clients can engage in several end to end
   messaging protocols such as:

      * bidirectional messaging
      * one way messaging
      * bulletin board system

5.1 Bidirectional Messaging

5.1.1 Contact Discovery

   Bidirectional communication partnerships are first established
   using the [PANDA] protocol to faciliate a [SIGNAL] handshake AND
   the exchange of dead drop descriptors. Each client uses one dead drop
   per contact. There is no universal naming scheme hence the
   namesake of this document. Like Petmail and Pond, clients choose
   the name for each of their contacts.

   Upon participation in the PANDA protocol the client registers
   a new dead drop and creates a new Signal double ratchet session
   for use with the new contact.

5.1.2 Sending Messages

   ( perhaps use this library: https://github.com/RadicalApp/libsignal-protocol-go )

5.2 Message Retrieval

   Message retrieval is done via the [KAETZCHEN] dead drop service [KATZDEADDROP].

5.3 One Way Messaging

5.4 Bulletin Board System

6. Client Cryptographic Storage Subsystem

   Ciphertext storage on disk for persisting various kinds of state
   information such as:

      * public key material
      * secret cryptographic ratchets
      * dead drop descriptors
      * ARQ scheduler states

7. The PANDA Exchange: Dead Drop Descriptor AND User Key Exchange

   User key exchange is done using [PANDA] implemented as a Katzenpost
   Provider side autoresponder service. [KATZPANDA] [KAETZCHEN] This
   means that bidirectional interaction with the PANDA service is done
   using the mix network transport for two purposes:

      1. Prevent the PANDA server from learning the client location.

      2. Prevent sufficiently global adversaries from learning which
         PANDA server a given client is interacting with.

      3. Prevent sufficiently global adversaries from learning which
         clients are interacting with the PANDA server.

8. User Interfaces
9. Anonymity Considerations
10. Security Considerations
11. Future Work

Appendix A. References

Appendix A.1 Normative References

   [RFC2119]   Bradner, S., "Key words for use in RFCs to Indicate
               Requirement Levels", BCP 14, RFC 2119,
               DOI 10.17487/RFC2119, March 1997,
               <http://www.rfc-editor.org/info/rfc2119>.

   [KAETZCHEN]  Angel, Y., Kaneko, K., Stainton, D.,
                "Katzenpost Provider-side Autoresponder", January 2018,
                <https://github.com/Katzenpost/docs/blob/master/drafts/kaetzchen.txt>.

   [KATZDEADDROP] Stainton, D., "Katzenpost Dead Drop Extension", February 2018,
                  <https://github.com/Katzenpost/docs/blob/master/drafts/deaddrop.txt>.

Appendix A.2 Informative References

   [SIGNAL]   Perrin, T., Marlinspike, M., "The Double Ratchet Algorithm", November 2016,
              <https://signal.org/docs/specifications/doubleratchet/>.

   [NOISE]    Perrin, T., "The Noise Protocol Framework", May 2017,
              <https://noiseprotocol.org/noise.pdf>.

   [KATZMIXWIRE] Angel, Y., "Katzenpost Mix Network Wire Protocol Specification", June 2017.
                <https://github.com/katzenpost/docs/blob/master/specs/wire-protocol.txt>.

   [POND]   Langley, A., "Pond", November 2012,
            <https://github.com/agl/pond/tree/master/doc>.

   [PETMAIL]  Warner, B., "Petmail mailbox-server delivery protocol",
                Proceedings of Brian Warner's blog, July 2015,
                <http://www.lothar.com/blog/53-petmail-delivery/>.

   [LOOPIX]    Piotrowska, A., Hayes, J., Elahi, T., Meiser, S., Danezis, G.,
               “The Loopix Anonymity System”,
               USENIX, August 2017,
               <https://arxiv.org/pdf/1703.00536.pdf>.

   [KATZMIXNET]  Angel, Y., Danezis, G., Diaz, C., Piotrowska, A., Stainton, D.,
                "Katzenpost Mix Network Specification", June 2017,
                <https://github.com/Katzenpost/docs/blob/master/specs/mixnet.txt>.

   [MIXMINION]  Danezis, G., Dingledine, R., Mathewsom, N.,
                "Mixminion: Design of a Type III Anonymous Remailer Protocol"
                <https://www.mixminion.net/minion-design.pdf>.

   [KATZMIXPKI]  Angel, Y., Piotrowska, A., Stainton, D.,
                 "Katzenpost Mix Network Public Key Infrastructure Specification", December 2017,
                 <https://github.com/katzenpost/docs/blob/master/specs/pki.txt>.

   [KATZPANDA]   Stainton, D., "Katzenpost PANDA Autoresponder Extension Specification",
                 March 2018, <https://github.com/katzenpost/docs/blob/master/drafts/panda.txt>.

   [PANDA]   Appelbaum, J., "Going Dark: Phrase Automated Nym Discovery Authentication",
             <https://github.com/agl/pond/tree/master/papers/panda>.

   [FORWARDMIX] Danezis, G., "Forward Secure Mixes",
                In the Proceedings of 7th Nordic Workshop on Secure IT Systems,
                November 2002, <https://www.freehaven.net/anonbib/cache/Dan:SFMix03.pdf>.

   [COMPULS05]  Danezis, G., Clulow, J., "Compulsion Resistant Anonymous Communications",
                Proceedings of Information Hiding Workshop, June 2005,
                <https://www.freehaven.net/anonbib/cache/ih05-danezisclulow.pdf>.

   [FINGERPRINTING] Danezis, G., Clayton, R.,
                    "Route Finger printing in Anonymous Communications",
                    <https://www.cl.cam.ac.uk/~rnc1/anonroute.pdf>.

   [BRIDGING] Danezis, G., Syverson, P.,
              "Bridging and Fingerprinting: Epistemic Attacks on Route Selection",
              In the Proceedings of PETS 2008, Leuven, Belgium, July 2008,
              <https://www.freehaven.net/anonbib/cache/danezis-pet2008.pdf>.

   [LOCALVIEW] Gogolewski, M., Klonowski, M., Kutylowsky, M.,
               "Local View Attack on Anonymous Communication",
               <https://www.freehaven.net/anonbib/cache/esorics05-Klonowski.pdf>.

   [MIRANDA] Leibowitz, H., Piotrowska, A., Danezis, G., Herzberg, A., 2017,
             "No right to ramain silent: Isolating Malicious Mixes"
             <https://eprint.iacr.org/2017/1000.pdf>.

   [MIXRELIABLE] Dingledine, R., Freedman, M., Hopwood, D., Molnar, D., 2001
                 "A Reputation System to Increase MIX-Net Reliability",
                 In Information Hiding, 4th International Workshop,
                 <https://www.freehaven.net/anonbib/cache/mix-acc.pdf>.

   [YEE02] Yee, Ka-Ping., "User Interaction Design for Secure Systems",
           Computer Science Department, University of California, Berkeley,
           May 2002, <http://zesty.ca/pubs/csd-02-1184.pdf>.
