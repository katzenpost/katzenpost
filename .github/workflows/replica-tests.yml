name: replica unit tests
on: [pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [amd64]
        go-version: [ "1.22.x"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install RocksDB dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential

      - name: Install gflags
        run: |
          cd /tmp
          git clone https://github.com/gflags/gflags.git
          cd gflags
          mkdir build
          cd build
          cmake -DBUILD_SHARED_LIBS=1 -DGFLAGS_INSTALL_SHARED_LIBS=1 ..
          make -j$(nproc)
          sudo make install
          cd /tmp
          rm -rf /tmp/gflags/

      - name: Install RocksDB
        run: |
          cd /tmp
          git clone https://github.com/facebook/rocksdb.git
          cd rocksdb
          git checkout v10.2.1
          make shared_lib -j$(nproc)
          sudo mkdir -p /usr/local/rocksdb/lib
          sudo mkdir -p /usr/local/rocksdb/include
          sudo cp librocksdb.so* /usr/local/rocksdb/lib
          sudo cp /usr/local/rocksdb/lib/librocksdb.so* /usr/lib/
          sudo cp -r include /usr/local/rocksdb/
          sudo cp -r include/* /usr/include/
          cd /tmp
          rm -rf /tmp/rocksdb/

      - name: Update library cache
        run: sudo ldconfig

      - name: Generate mixnet configuration
        run: cd genconfig && go build && ./genconfig -wirekem xwing -v -b /conf -o ../docker/voting_mixnet/

      - name: Run replica unit tests
        run: cd replica && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./...
