name: docker mixnet integration tests
on: [pull_request, push]
jobs:

  test_e2e_client:
    env:
      warped: true
      no_mixdecoy: false
      no_decoy: false
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make distro=debian log_level=DEBUG start wait

      - name: run ping
        run: cd docker && make distro=debian run-ping

      - name: run client end to end tests
        run: cd client && make distro=debian testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make distro=debian stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mixnet-${{ github.run_id }}-${{ github.job }}
          path: |
            docker/voting_mixnet/*/*.log

  test_e2e_client2:
    env:
      warped: true
      no_mixdecoy: false
      no_decoy: false
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make distro=debian start wait

      - name: run client end to end tests
        run: cd client2 && make distro=debian testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make distro=debian stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mixnet-${{ github.run_id }}-${{ github.job }}
          path: |
            docker/voting_mixnet/*/*.log

  test_e2e_memspool:
    env:
      warped: true
      no_mixdecoy: false
      no_decoy: false
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make distro=debian log_level=DEBUG start wait

      - name: run memspool end to end tests
        run: cd memspool && make distro=debian testargs=-coverprofile=coverage.part dockerdockertest && cat client/coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make distro=debian stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mixnet-${{ github.run_id }}-${{ github.job }}
          path: |
            docker/voting_mixnet/*/*.log

  test_e2e_catshadow:
    env:
      warped: true
      no_mixdecoy: false
      no_decoy: false
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
        ratchetNike: [CTIDH1024-X25519, CTIDH512-X25519, NOBS_CSIDH-X25519]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install socat, for talking to management socket
        run: sudo apt update && sudo apt install -y socat

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make distro=debian ratchetNike=${{ matrix.ratchetNike }} log_level=DEBUG start wait

      - name: test creating upgrade test state files
        run: cd catshadow && make distro=debian testargs=-coverprofile=coverage.part test_version=latest upgrade_test_recreate && cat coverage.part >> ../coverage.out

      - name: test upgrade using newly-created state files
        run: cd catshadow && make distro=debian testargs=-coverprofile=coverage.part test_version=latest upgrade_test_use_saved && cat coverage.part >> ../coverage.out

      - name: test upgrade using saved state files from v0.0.30
        run: cd catshadow && make distro=debian testargs=-coverprofile=coverage.part test_version=v30 upgrade_test_use_saved && cat coverage.part >> ../coverage.out

      - name: run catshadow end to end tests
        run: cd catshadow && make distro=debian testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make distro=debian stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mixnet-${{ github.run_id }}-${{ matrix.ratchetNike }}-${{ github.job }}
          path: |
            docker/voting_mixnet/*/*.log

  test_benchmark:
    env:
      warped: true
      no_mixdecoy: false
      no_decoy: false
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make distro=debian log_level=DEBUG start wait run-ping

      - name: run benchmark tests
        run: cd bench && make distro=debian testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make distro=debian stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mixnet-${{ github.run_id }}-${{ github.job }}
          path: |
            docker/voting_mixnet/*/*.log

  test_e2e_stream:
    env:
      warped: true
      no_mixdecoy: false
      no_decoy: false
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make distro=debian log_level=DEBUG start wait

      - name: run pigeonhole end to end tests
        run: cd pigeonhole && make distro=debian testargs=-coverprofile=coverage.part dockerdockertest && cat client/coverage.part >> ../coverage.out

      - name: run stream end to end tests
        run: cd stream && make distro=debian testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make distro=debian stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mixnet-${{ github.run_id }}-${{ github.job }}
          path: |
            docker/voting_mixnet/*/*.log
