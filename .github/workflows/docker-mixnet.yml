name: docker mixnet integration tests
on: [pull_request, push]
jobs:

  test_e2e_client:
    env:
      warped: true
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install codecov-cli
        run: pip install codecov-cli

      - name: Check systemctl status
        run: |
          systemctl --user status podman.socket

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make start wait

      - name: run ping
        run: cd docker && make run-ping

      - name: run client end to end tests
        run: cd client && make testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        with:
          name: mixnet-${{ github.run_id }}-${{ github.run_number }}
          path: docker/voting_mixnet/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  test_e2e_memspool:
    env:
      warped: true
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install codecov-cli
        run: pip install codecov-cli

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make start wait

      - name: run memspool end to end tests
        run: cd memspool && make testargs=-coverprofile=coverage.part dockerdockertest && cat client/coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        with:
          name: mixnet-${{ github.run_id }}-${{ github.run_number }}
          path: docker/voting_mixnet/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  test_e2e_catshadow:
    env:
      warped: true
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install codecov-cli
        run: pip install codecov-cli

      - name: Install socat, for talking to management socket
        run: sudo apt update && sudo apt install -y socat

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make start wait

      - name: test creating upgrade test state files
        run: cd catshadow && make testargs=-coverprofile=coverage.part test_version=latest upgrade_test_recreate && cat coverage.part >> ../coverage.out

      - name: test upgrade using newly-created state files
        run: cd catshadow && make testargs=-coverprofile=coverage.part test_version=latest upgrade_test_use_saved && cat coverage.part >> ../coverage.out

      - name: test upgrade using saved state files from v0.0.30
        run: cd catshadow && make testargs=-coverprofile=coverage.part test_version=v30 upgrade_test_use_saved && cat coverage.part >> ../coverage.out

      - name: run catshadow end to end tests
        run: cd catshadow && make testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        with:
          name: mixnet-${{ github.run_id }}-${{ github.run_number }}
          path: docker/voting_mixnet/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  test_benchmark:
    env:
      warped: true
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install codecov-cli
        run: pip install codecov-cli

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make start wait run-ping

      - name: run benchmark tests
        run: cd bench && make testargs=-coverprofile=coverage.part dockerdockertest && cat coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        with:
          name: mixnet-${{ github.run_id }}-${{ github.run_number }}
          path: docker/voting_mixnet/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  test_e2e_pigeonhole:
    env:
      warped: true
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install codecov-cli
        run: pip install codecov-cli

      - name: Configure podman socket
        run: |
          systemctl --user start podman.socket

      - name: Build and start the mixnet
        run: |
          cd docker && make start wait

      - name: run pigeonhole end to end tests
        run: cd pigeonhole && make testargs=-coverprofile=coverage.part dockerdockertest && cat client/coverage.part >> ../coverage.out

      - name: Stop the mixnet
        run: |
          cd docker && make stop

      - name: Upload testnet state
        uses: actions/upload-artifact@v4
        with:
          name: mixnet-${{ github.run_id }}-${{ github.run_number }}
          path: docker/voting_mixnet/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
