name: linux unit tests
on: [pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [amd64]
        go-version: [ "1.22.x"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate mixnet configuration
        run: cd genconfig && go build && ./genconfig -wirekem xwing -v -b /conf -o ../docker/voting_mixnet/

      - name: Run authority unit tests
        run: sudo sh -c "cd authority && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run catshadow unit tests
        run: sudo sh -c "cd catshadow && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run client unit tests
        run: sudo sh -c "cd client && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run core unit tests
        run: sudo sh -c "cd core && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run NIKE Sphinx unit tests with CTIDH
        run: sudo sh -c "cd core/sphinx && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run doubleratchet unit tests
        run: sudo sh -c "cd doubleratchet && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run memspool unit tests
        run: sudo sh -c "cd memspool && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run panda unit tests
        run: sudo sh -c "cd panda && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run reunion unit tests
        run: sudo sh -c "cd reunion && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."

      - name: Run server unit tests
        run: sudo sh -c "cd server && ulimit -l 64435 && GORACE=history_size=7 go test -coverprofile=coverage.out -race -v -failfast -timeout 30m ./..."
