name: build
on: [push]
env:
  CGO_CFLAGS_ALLOW: "-DPARAMS=sphincs-shake-256f"

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate mixnet configuration
        run: cd genconfig && go build && ./genconfig -v -b /conf -o ../docker/voting_mixnet/

      - name: Run all package unit tests
        run: sudo sh -c "CGO_CFLAGS_ALLOW=-DPARAMS=sphincs-shake-256f GORACE=history_size=7 go test -race -v -timeout 0 ./..."

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  test_e2e:
    env:
      warped: true
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build voting authority docker image
        run: |
          cd docker && make voting_authority

      - name: Build server docker image
        run: |
          cd docker && make server

      - name: Generate mixnet configuration
        run: cd genconfig && go build && ./genconfig -v -b /conf -o ../docker/voting_mixnet/

      - name: Start the mixnet
        run: |
          cd docker && make start-voting-testnet

      - name: Allow mixnet to settle
        run: |
          sleep 240

      - name: run client end to end tests
        run: cd client && make dockerdockertest

      - name: run memspool end to end tests
        run: cd memspool && make dockerdockertest

      - name: run catshadow end to end tests
        run: cd catshadow && make dockerdockertest

      - name: Stop the mixnet
        run: |
          cd docker && make stop-voting-testnet
