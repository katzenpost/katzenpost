---
- name: Check if mixnet_voting service file exists
  ansible.builtin.stat:
    path: "/etc/systemd/system/mixnet_voting.service"
  register: mixnet_voting_service

- name: Create mixnet_voting service file
  block:
    - name: Creating mixnet_voting systemd service file
      copy:
        content: |
          [Unit]
          Description=Mixnet Voting Service
          After=network.target
          
          [Service]
          Type=simple
          User=root
          WorkingDirectory={{ base_dir }}
          ExecStart={{ base_dir }}/voting -f {{ base_dir }}/authority.toml
          Restart=always
          RestartSec=5
          
          [Install]
          WantedBy=multi-user.target
        dest: "/etc/systemd/system/mixnet_voting.service"
  when: not mixnet_voting_service.stat.exists

- name: Reload systemd to recognize mixnet service
  ansible.builtin.systemd:
    daemon_reload: yes
  when: not mixnet_voting_service.stat.exists

- name: Ensure mixnet_voting service is started and enabled
  ansible.builtin.systemd:
    name: mixnet_voting
    state: started
    enabled: yes

- name: Output systemctl status of mixnet_voting
  ansible.builtin.shell: systemctl status mixnet_voting
  register: service_status

- name: Print the registered status output
  ansible.builtin.debug:
    var: service_status.stdout

- name: Check if NTP is already synchronized
  command: timedatectl status
  register: timedatectl_status
  failed_when: timedatectl_status.rc != 0
  changed_when: false
